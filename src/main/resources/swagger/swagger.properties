customers.entity = Customer entity.
customers.entity.idCustomer = Unique identifier of the customer. No two customers can have the same id.
customers.entity.firstName = First name of the customer.
customers.entity.lastName = Last name of the customer.
customers.entity.dateBirth = Customer date birth. (yyyy-MM-dd)
customers.entity.mobilePhone = Customer mobile phone.
customers.controller.method.getAllCustomers = Returns list of all Customers.
customers.controller.method.getCustomerById = Returns a specific Customer by their identifier. 404 if does not exist.
customers.controller.method.param.getCustomerById = Id of the Customer to be obtained. Cannot be empty.
customers.controller.method.saveCustomer = Creates a new Customer.
customers.controller.method.param.saveCustomer = Customer information to be created.
customers.controller.method.updateCustomer = Update Customer.
customers.controller.method.param.updateCustomer = Customer information to be update.
customers.controller.method.deleteCustomer = Deletes a Customer. 404 if the customer's identifier is not found.
customers.controller.method.param.deleteCustomer = Id of the Customer to be deleted. Cannot be empty.

tariffs.entity = Tariff entity.
tariffs.entity.idTariff = Unique identifier of the Tariff. No two Tariffs can have the same id.
tariffs.entity.title = Name of Tariff
tariffs.entity.price = Tariff price
tariffs.controller.method.getAllTariffs = Returns list of all Tariffs.
tariffs.controller.method.getCustomerById = Returns a specific Tariff by their identifier. 404 if does not exist.
tariffs.controller.method.param.getCustomerById = Id of the Tariff to be obtained. Cannot be empty.
tariffs.controller.method.saveTariff = Creates a new Tariff.
tariffs.controller.method.param.saveTariff = Tariff information to be created.
tariffs.controller.method.updateTariff = Update Tariff.
tariffs.controller.method.param.updateTariff = Tariff information to be update.
tariffs.controller.method.deleteTariff = Deletes a Tariff. 404 if the customer's identifier is not found.
tariffs.controller.method.param.deleteTariff = Id of the Tariff to be deleted. Cannot be empty.

balances.model = Balance entity.
balances.model.idBalance = Unique identifier of the Balance. No two Balances can have the same id.
balances.model.balance = Account balance.
balances.model.customer = Customer who owns the balance. Binding - One Customer to Many Balances
balances.model.tariff = Tariff connected to the balance. Binding - One Tariff to Many Balances
balances.controller.method.getAllBalances = Returns list of all Balances.
balances.controller.method.getBalanceById = Returns a specific Balance by their identifier. 404 if does not exist.
balances.controller.method.param.getBalanceById = Id of the Balance to be obtained. Cannot be empty.
balances.controller.method.saveBalance = Creates a new Balance.
balances.controller.method.param.saveBalance = Balance information to be created.
balances.controller.method.updateBalance = Update Balance.
balances.controller.method.param.updateBalance = Balance information to be update.
balances.controller.method.deleteBalance = Deletes a Balance. 404 if the customer's identifier is not found.
balances.controller.method.param.deleteBalance = Id of the Balance to be deleted. Cannot be empty.